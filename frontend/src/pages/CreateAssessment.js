import React from 'react';
import { useParams } from 'react-router-dom';
import '../styles/style-create-assessments.css';

const CreateAssessment = () => {

  const params = useParams();
  const type = params.type;

  useEffect(() => {
    
  }, [])

  const handleFileChange = (event) => {
    console.log(event.target.files[0].name);
  };

  const handleRemoveFile = () => {
    console.log('Remove file');
  };

  const handleDropdownClick = () => {
    console.log('Toggle dropdown');
  };

  const handleSelectOption = () => {
    console.log('Select option');
  };

  const handleAddInputElement = () => {
    console.log('Add input element');
  };

  const handleAddNewSection = () => {
    console.log('Add new section');
  };

  const handleClosePrompt = () => {
    console.log('Close prompt');
  };

  return (
    <main className="generic-content-container">
      <a href="/home"><h2 style={{marginTop: 0}}> ‚Üê Back to My Assessments </h2></a>
      <div className="content-header">
        <img src="static/media/quiz-icon.png" id="header-icon" width="115" height="110"/>
        <h1 id="header-title"> Create Quiz Type Assessment </h1>
      </div>

      <form className="assessment-form" id="assessment-creation-form" method="post" encType="multipart/form-data">
      <div class="general-attributes-form">
        <h2> Assessment Information </h2>
        <p id="header-subtitle"> Quiz is a quick way to assess students on a topic. Recommended for short and simple assessments. </p> <br/>
        <label> Assessment Name </label>
        <input class="generic-form-textbox" type="text" placeholder="What's the name of your assessment?" name="assessment_name" />
        <label> Assessment Description </label>
        <input class="generic-form-textbox" type="text" placeholder="What is this assessment about? Give your assessment a short description." name="assessment_description" />

        <br/><br/><br/>
        <h2> Learning Materials </h2>
        <p> The material provided will be the source and the basis of the assessment that would be generated by the system. Please have a source material that is descriptive and comprehensive as to generate an equally quality assessment. </p> <br/>
        <label> Materials Editor </label>
        <textarea class="generic-form-textarea-variant" id="material-textarea" placeholder="Start by writing to the text area or upload a PDF as a material. Anything written here is ignored if a file has been uploaded." name="lesson"></textarea> <br/><br/>
        <div class="custom-file-container">
          <label for="fileInput" id="material-file-upload" class="custom-file-button">Choose File</label>
          <input type="file" id="fileInput" class="custom-file-input" name="lesson_file" onchange="displayFileName(this)" />
          <span class="custom-file-name" id="fileNameDisplay">No file chosen</span>
        </div>
        <button type="button" id="removeFile" class="remove-file" onclick="removeTheFile()">Remove File</button>
      </div>
      <div class="generator-attributes-form">
        <h2> AI Generator Settings </h2>
        <p> 
          Need your assessments to be fine-tuned to your liking? <br/>
          You can specify learning objectives to set standards to a student taking this assessment.
        </p>
          <h2 class="exam-part"> Section 1 </h2> <br/>
          <label> Assessment Type </label>
          <div class="dropdown-container">
            <input type="text" class="generic-form-textbox" placeholder="Select an option" onclick="toggleDropdown(this)" name="section-type_{{ sectionCounter }}" readonly />
            <ul class="dropdown-options">
            <li onclick="selectOption(this)">Multiple Choice</li>
            <li onclick="selectOption(this)">True or False</li>
            <li onclick="selectOption(this)">Fill in The Blanks</li>
            <li onclick="selectOption(this)">Identification</li>
            <li onclick="selectOption(this)">Essay</li>
            </ul>
          </div>
          <label> Assessment Length </label>
            <div class="dropdown-container">
              <p>20 questions max</p>
              <input type="number" class="generic-form-textbox" name="section-length_{{ sectionCounter }}" min="1" max="20" />
            </div>

            <label> Learning Outcomes: </label>
            <div class="learning-outcomes" id="learning-outcomes_{{ sectionCounter }}">

            </div>
            <button class="generic-button-variant" onclick="addInputElement('learning-outcomes_{{ sectionCounter }}')" type="button"> Add Learning Outcome </button>
            <button class="generic-button-variant-2" id="section-.add-button" type="button" onclick="addNewSection()"> Add Exam Part/Section </button>
            <div id="assessment-section-container">
            </div>
          
        </div>
        <div class="submit-form-button">
          <button class="generic-button" type="submit"> Create Assessment </button>
        </div>
      </form>

      <div id="promptContainer" className="prompt-container" style={{display: 'none'}}>
        <h1> Incomplete Data! </h1><br/><br/>
        <img src="static/media/error.gif"/>
        <p> It seems like you have not properly filled-up all of the required data to create an assessment just yet. </p>
        <a href="javascript:void(0);" onClick={handleClosePrompt}><div className="generic-button-variant"> Back </div></a>
      </div>
      <div id="overlay" className="overlay"></div>

    </main>
  );
}

export default CreateAssessment;